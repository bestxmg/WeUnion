{"ast":null,"code":"import _objectSpread from\"/workspace/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{Box,List,ListItem,ListItemAvatar,ListItemText,Avatar,Typography,Badge,Divider,CircularProgress,Alert}from'@mui/material';import{formatDistanceToNow}from'date-fns';import api from'../../services/api';import{useSocket}from'../../contexts/SocketContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatList=()=>{const[conversations,setConversations]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();const{socket}=useSocket();useEffect(()=>{fetchConversations();},[]);useEffect(()=>{if(socket){socket.on('new_message',handleNewMessage);socket.on('messages_read',handleMessagesRead);return()=>{socket.off('new_message',handleNewMessage);socket.off('messages_read',handleMessagesRead);};}},[socket]);const fetchConversations=async()=>{try{const response=await api.get('/messages/conversations');setConversations(response.data);}catch(error){setError('Failed to load conversations');console.error('Failed to fetch conversations:',error);}finally{setLoading(false);}};const handleNewMessage=messageData=>{setConversations(prev=>{const updated=prev.map(conv=>{if(conv.id===messageData.conversationId){return _objectSpread(_objectSpread({},conv),{},{last_message:{content:messageData.content,sender_name:messageData.sender.displayName,created_at:messageData.createdAt},unread_count:conv.unread_count+1,updated_at:messageData.createdAt});}return conv;});// Sort by updated_at\nreturn updated.sort((a,b)=>new Date(b.updated_at)-new Date(a.updated_at));});};const handleMessagesRead=_ref=>{let{conversationId}=_ref;setConversations(prev=>prev.map(conv=>conv.id===conversationId?_objectSpread(_objectSpread({},conv),{},{unread_count:0}):conv));};const handleConversationClick=conversationId=>{navigate(\"/chat/\".concat(conversationId));};const formatLastMessage=message=>{if(!message)return'No messages yet';const prefix=message.message_type==='image'?'[Image]':'';return prefix+message.content;};const formatTime=timestamp=>{if(!timestamp)return'';const date=new Date(timestamp);const now=new Date();const diffInHours=(now-date)/(1000*60*60);if(diffInHours<24){return date.toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true});}else{return formatDistanceToNow(date,{addSuffix:true});}};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"100%\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}if(error){return/*#__PURE__*/_jsx(Box,{p:2,children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:error})});}if(conversations.length===0){return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"100%\",p:3,textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",gutterBottom:true,children:\"No conversations yet\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Start chatting with your contacts to see conversations here\"})]});}return/*#__PURE__*/_jsx(Box,{sx:{height:'100%',overflow:'auto'},children:/*#__PURE__*/_jsx(List,{sx:{p:0},children:conversations.map((conversation,index)=>{var _conversation$name,_conversation$last_me;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:()=>handleConversationClick(conversation.id),sx:{py:2,px:3,'&:hover':{bgcolor:'action.hover'}},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Badge,{badgeContent:conversation.unread_count||0,color:\"error\",max:99,children:/*#__PURE__*/_jsx(Avatar,{src:conversation.avatar_url,sx:{width:50,height:50},children:((_conversation$name=conversation.name)===null||_conversation$name===void 0?void 0:_conversation$name.charAt(0))||'?'})})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",fontWeight:\"medium\",children:conversation.name||'Unknown'}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap',maxWidth:'200px'},children:formatLastMessage(conversation.last_message)}),sx:{mr:1}}),/*#__PURE__*/_jsx(Box,{textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:formatTime((_conversation$last_me=conversation.last_message)===null||_conversation$last_me===void 0?void 0:_conversation$last_me.created_at)})})]}),index<conversations.length-1&&/*#__PURE__*/_jsx(Divider,{variant:\"inset\",component:\"li\",sx:{ml:9}})]},conversation.id);})})});};export default ChatList;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","List","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","Badge","Divider","CircularProgress","Alert","formatDistanceToNow","api","useSocket","jsx","_jsx","jsxs","_jsxs","ChatList","conversations","setConversations","loading","setLoading","error","setError","navigate","socket","fetchConversations","on","handleNewMessage","handleMessagesRead","off","response","get","data","console","messageData","prev","updated","map","conv","id","conversationId","_objectSpread","last_message","content","sender_name","sender","displayName","created_at","createdAt","unread_count","updated_at","sort","a","b","Date","_ref","handleConversationClick","concat","formatLastMessage","message","prefix","message_type","formatTime","timestamp","date","now","diffInHours","toLocaleTimeString","hour","minute","hour12","addSuffix","display","justifyContent","alignItems","height","children","p","severity","length","flexDirection","textAlign","variant","color","gutterBottom","sx","overflow","conversation","index","_conversation$name","_conversation$last_me","Fragment","button","onClick","py","px","bgcolor","badgeContent","max","src","avatar_url","width","name","charAt","primary","fontWeight","secondary","textOverflow","whiteSpace","maxWidth","mr","component","ml"],"sources":["/workspace/client/src/components/Chat/ChatList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography,\n  Badge,\n  Divider,\n  CircularProgress,\n  Alert,\n} from '@mui/material';\nimport { formatDistanceToNow } from 'date-fns';\nimport api from '../../services/api';\nimport { useSocket } from '../../contexts/SocketContext';\n\nconst ChatList = () => {\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const { socket } = useSocket();\n\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('new_message', handleNewMessage);\n      socket.on('messages_read', handleMessagesRead);\n\n      return () => {\n        socket.off('new_message', handleNewMessage);\n        socket.off('messages_read', handleMessagesRead);\n      };\n    }\n  }, [socket]);\n\n  const fetchConversations = async () => {\n    try {\n      const response = await api.get('/messages/conversations');\n      setConversations(response.data);\n    } catch (error) {\n      setError('Failed to load conversations');\n      console.error('Failed to fetch conversations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleNewMessage = (messageData) => {\n    setConversations(prev => {\n      const updated = prev.map(conv => {\n        if (conv.id === messageData.conversationId) {\n          return {\n            ...conv,\n            last_message: {\n              content: messageData.content,\n              sender_name: messageData.sender.displayName,\n              created_at: messageData.createdAt,\n            },\n            unread_count: conv.unread_count + 1,\n            updated_at: messageData.createdAt,\n          };\n        }\n        return conv;\n      });\n\n      // Sort by updated_at\n      return updated.sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at));\n    });\n  };\n\n  const handleMessagesRead = ({ conversationId }) => {\n    setConversations(prev =>\n      prev.map(conv =>\n        conv.id === conversationId\n          ? { ...conv, unread_count: 0 }\n          : conv\n      )\n    );\n  };\n\n  const handleConversationClick = (conversationId) => {\n    navigate(`/chat/${conversationId}`);\n  };\n\n  const formatLastMessage = (message) => {\n    if (!message) return 'No messages yet';\n    \n    const prefix = message.message_type === 'image' ? '[Image]' : '';\n    return prefix + message.content;\n  };\n\n  const formatTime = (timestamp) => {\n    if (!timestamp) return '';\n    \n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now - date) / (1000 * 60 * 60);\n    \n    if (diffInHours < 24) {\n      return date.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: true \n      });\n    } else {\n      return formatDistanceToNow(date, { addSuffix: true });\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Alert severity=\"error\">{error}</Alert>\n      </Box>\n    );\n  }\n\n  if (conversations.length === 0) {\n    return (\n      <Box \n        display=\"flex\" \n        flexDirection=\"column\" \n        alignItems=\"center\" \n        justifyContent=\"center\" \n        height=\"100%\" \n        p={3}\n        textAlign=\"center\"\n      >\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n          No conversations yet\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Start chatting with your contacts to see conversations here\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height: '100%', overflow: 'auto' }}>\n      <List sx={{ p: 0 }}>\n        {conversations.map((conversation, index) => (\n          <React.Fragment key={conversation.id}>\n            <ListItem\n              button\n              onClick={() => handleConversationClick(conversation.id)}\n              sx={{\n                py: 2,\n                px: 3,\n                '&:hover': {\n                  bgcolor: 'action.hover',\n                },\n              }}\n            >\n              <ListItemAvatar>\n                <Badge \n                  badgeContent={conversation.unread_count || 0} \n                  color=\"error\"\n                  max={99}\n                >\n                  <Avatar \n                    src={conversation.avatar_url}\n                    sx={{ width: 50, height: 50 }}\n                  >\n                    {conversation.name?.charAt(0) || '?'}\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              \n              <ListItemText\n                primary={\n                  <Typography variant=\"body1\" fontWeight=\"medium\">\n                    {conversation.name || 'Unknown'}\n                  </Typography>\n                }\n                secondary={\n                  <Typography \n                    variant=\"body2\" \n                    color=\"text.secondary\"\n                    sx={{\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap',\n                      maxWidth: '200px',\n                    }}\n                  >\n                    {formatLastMessage(conversation.last_message)}\n                  </Typography>\n                }\n                sx={{ mr: 1 }}\n              />\n              \n              <Box textAlign=\"right\">\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {formatTime(conversation.last_message?.created_at)}\n                </Typography>\n              </Box>\n            </ListItem>\n            \n            {index < conversations.length - 1 && (\n              <Divider variant=\"inset\" component=\"li\" sx={{ ml: 9 }} />\n            )}\n          </React.Fragment>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default ChatList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}