{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState,useRef}from'react';import{io}from'socket.io-client';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext();export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[connected,setConnected]=useState(false);const{token,user,isAuthenticated,isInitialized}=useAuth();const socketRef=useRef(null);const connectionAttemptRef=useRef(false);const mountedRef=useRef(true);useEffect(()=>{return()=>{mountedRef.current=false;};},[]);useEffect(()=>{// Only connect if fully authenticated and initialized\nif(isAuthenticated&&isInitialized&&token&&user&&!connectionAttemptRef.current){connectionAttemptRef.current=true;// Clean up any existing connection first\nif(socketRef.current){socketRef.current.disconnect();socketRef.current=null;setSocket(null);setConnected(false);}// Auto-detect the backend URL\nconst getSocketUrl=()=>{const customUrl=process.env.REACT_APP_API_URL;if(customUrl){return customUrl;}// If no custom URL is set, use the same hostname as the frontend\nconst protocol=window.location.protocol;const hostname=window.location.hostname;return\"\".concat(protocol,\"//\").concat(hostname,\":5000\");};const newSocket=io(getSocketUrl(),{auth:{token:token},// Prevent rapid reconnections\nreconnectionDelay:2000,reconnectionDelayMax:5000,maxReconnectionAttempts:5,timeout:10000,// Only reconnect if manually disconnected\nautoConnect:true,forceNew:true// Force new connection to prevent conflicts\n});newSocket.on('connect',()=>{if(mountedRef.current){console.log('Connected to server');setConnected(true);connectionAttemptRef.current=false;}});newSocket.on('disconnect',reason=>{if(mountedRef.current){console.log('Disconnected from server:',reason);setConnected(false);connectionAttemptRef.current=false;}});newSocket.on('connect_error',error=>{if(mountedRef.current){console.error('Socket connection error:',error);setConnected(false);connectionAttemptRef.current=false;}});socketRef.current=newSocket;setSocket(newSocket);return()=>{connectionAttemptRef.current=false;if(socketRef.current){socketRef.current.disconnect();socketRef.current=null;}if(mountedRef.current){setSocket(null);setConnected(false);}};}else if(!isAuthenticated||!token||!user){// Clean up when not authenticated\nconnectionAttemptRef.current=false;if(socketRef.current){socketRef.current.disconnect();socketRef.current=null;}if(mountedRef.current){setSocket(null);setConnected(false);}}},[token,user,isAuthenticated,isInitialized]);const value={socket,connected};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});};export const useSocket=()=>{const context=useContext(SocketContext);if(!context){throw new Error('useSocket must be used within a SocketProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","io","useAuth","jsx","_jsx","SocketContext","SocketProvider","_ref","children","socket","setSocket","connected","setConnected","token","user","isAuthenticated","isInitialized","socketRef","connectionAttemptRef","mountedRef","current","disconnect","getSocketUrl","customUrl","process","env","REACT_APP_API_URL","protocol","window","location","hostname","concat","newSocket","auth","reconnectionDelay","reconnectionDelayMax","maxReconnectionAttempts","timeout","autoConnect","forceNew","on","console","log","reason","error","value","Provider","useSocket","context","Error"],"sources":["/workspace/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { token, user, isAuthenticated, isInitialized } = useAuth();\n  const socketRef = useRef(null);\n  const connectionAttemptRef = useRef(false);\n  const mountedRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    // Only connect if fully authenticated and initialized\n    if (isAuthenticated && isInitialized && token && user && !connectionAttemptRef.current) {\n      connectionAttemptRef.current = true;\n      \n      // Clean up any existing connection first\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n        setSocket(null);\n        setConnected(false);\n      }\n\n      // Auto-detect the backend URL\n      const getSocketUrl = () => {\n        const customUrl = process.env.REACT_APP_API_URL;\n        if (customUrl) {\n          return customUrl;\n        }\n        \n        // If no custom URL is set, use the same hostname as the frontend\n        const protocol = window.location.protocol;\n        const hostname = window.location.hostname;\n        return `${protocol}//${hostname}:5000`;\n      };\n\n      const newSocket = io(getSocketUrl(), {\n        auth: {\n          token: token\n        },\n        // Prevent rapid reconnections\n        reconnectionDelay: 2000,\n        reconnectionDelayMax: 5000,\n        maxReconnectionAttempts: 5,\n        timeout: 10000,\n        // Only reconnect if manually disconnected\n        autoConnect: true,\n        forceNew: true // Force new connection to prevent conflicts\n      });\n\n      newSocket.on('connect', () => {\n        if (mountedRef.current) {\n          console.log('Connected to server');\n          setConnected(true);\n          connectionAttemptRef.current = false;\n        }\n      });\n\n      newSocket.on('disconnect', (reason) => {\n        if (mountedRef.current) {\n          console.log('Disconnected from server:', reason);\n          setConnected(false);\n          connectionAttemptRef.current = false;\n        }\n      });\n\n      newSocket.on('connect_error', (error) => {\n        if (mountedRef.current) {\n          console.error('Socket connection error:', error);\n          setConnected(false);\n          connectionAttemptRef.current = false;\n        }\n      });\n\n      socketRef.current = newSocket;\n      setSocket(newSocket);\n\n      return () => {\n        connectionAttemptRef.current = false;\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n          socketRef.current = null;\n        }\n        if (mountedRef.current) {\n          setSocket(null);\n          setConnected(false);\n        }\n      };\n    } else if (!isAuthenticated || !token || !user) {\n      // Clean up when not authenticated\n      connectionAttemptRef.current = false;\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n      if (mountedRef.current) {\n        setSocket(null);\n        setConnected(false);\n      }\n    }\n  }, [token, user, isAuthenticated, isInitialized]);\n\n  const value = {\n    socket,\n    connected,\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CACrF,OAASC,EAAE,KAAQ,kBAAkB,CACrC,OAASC,OAAO,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,aAAa,cAAGT,aAAa,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAU,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAEc,KAAK,CAAEC,IAAI,CAAEC,eAAe,CAAEC,aAAc,CAAC,CAAGd,OAAO,CAAC,CAAC,CACjE,KAAM,CAAAe,SAAS,CAAGjB,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAkB,oBAAoB,CAAGlB,MAAM,CAAC,KAAK,CAAC,CAC1C,KAAM,CAAAmB,UAAU,CAAGnB,MAAM,CAAC,IAAI,CAAC,CAE/BF,SAAS,CAAC,IAAM,CACd,MAAO,IAAM,CACXqB,UAAU,CAACC,OAAO,CAAG,KAAK,CAC5B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAENtB,SAAS,CAAC,IAAM,CACd;AACA,GAAIiB,eAAe,EAAIC,aAAa,EAAIH,KAAK,EAAIC,IAAI,EAAI,CAACI,oBAAoB,CAACE,OAAO,CAAE,CACtFF,oBAAoB,CAACE,OAAO,CAAG,IAAI,CAEnC;AACA,GAAIH,SAAS,CAACG,OAAO,CAAE,CACrBH,SAAS,CAACG,OAAO,CAACC,UAAU,CAAC,CAAC,CAC9BJ,SAAS,CAACG,OAAO,CAAG,IAAI,CACxBV,SAAS,CAAC,IAAI,CAAC,CACfE,YAAY,CAAC,KAAK,CAAC,CACrB,CAEA;AACA,KAAM,CAAAU,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,SAAS,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC/C,GAAIH,SAAS,CAAE,CACb,MAAO,CAAAA,SAAS,CAClB,CAEA;AACA,KAAM,CAAAI,QAAQ,CAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,CACzC,KAAM,CAAAG,QAAQ,CAAGF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CACzC,SAAAC,MAAA,CAAUJ,QAAQ,OAAAI,MAAA,CAAKD,QAAQ,UACjC,CAAC,CAED,KAAM,CAAAE,SAAS,CAAG/B,EAAE,CAACqB,YAAY,CAAC,CAAC,CAAE,CACnCW,IAAI,CAAE,CACJpB,KAAK,CAAEA,KACT,CAAC,CACD;AACAqB,iBAAiB,CAAE,IAAI,CACvBC,oBAAoB,CAAE,IAAI,CAC1BC,uBAAuB,CAAE,CAAC,CAC1BC,OAAO,CAAE,KAAK,CACd;AACAC,WAAW,CAAE,IAAI,CACjBC,QAAQ,CAAE,IAAK;AACjB,CAAC,CAAC,CAEFP,SAAS,CAACQ,EAAE,CAAC,SAAS,CAAE,IAAM,CAC5B,GAAIrB,UAAU,CAACC,OAAO,CAAE,CACtBqB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC9B,YAAY,CAAC,IAAI,CAAC,CAClBM,oBAAoB,CAACE,OAAO,CAAG,KAAK,CACtC,CACF,CAAC,CAAC,CAEFY,SAAS,CAACQ,EAAE,CAAC,YAAY,CAAGG,MAAM,EAAK,CACrC,GAAIxB,UAAU,CAACC,OAAO,CAAE,CACtBqB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEC,MAAM,CAAC,CAChD/B,YAAY,CAAC,KAAK,CAAC,CACnBM,oBAAoB,CAACE,OAAO,CAAG,KAAK,CACtC,CACF,CAAC,CAAC,CAEFY,SAAS,CAACQ,EAAE,CAAC,eAAe,CAAGI,KAAK,EAAK,CACvC,GAAIzB,UAAU,CAACC,OAAO,CAAE,CACtBqB,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDhC,YAAY,CAAC,KAAK,CAAC,CACnBM,oBAAoB,CAACE,OAAO,CAAG,KAAK,CACtC,CACF,CAAC,CAAC,CAEFH,SAAS,CAACG,OAAO,CAAGY,SAAS,CAC7BtB,SAAS,CAACsB,SAAS,CAAC,CAEpB,MAAO,IAAM,CACXd,oBAAoB,CAACE,OAAO,CAAG,KAAK,CACpC,GAAIH,SAAS,CAACG,OAAO,CAAE,CACrBH,SAAS,CAACG,OAAO,CAACC,UAAU,CAAC,CAAC,CAC9BJ,SAAS,CAACG,OAAO,CAAG,IAAI,CAC1B,CACA,GAAID,UAAU,CAACC,OAAO,CAAE,CACtBV,SAAS,CAAC,IAAI,CAAC,CACfE,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CACH,CAAC,IAAM,IAAI,CAACG,eAAe,EAAI,CAACF,KAAK,EAAI,CAACC,IAAI,CAAE,CAC9C;AACAI,oBAAoB,CAACE,OAAO,CAAG,KAAK,CACpC,GAAIH,SAAS,CAACG,OAAO,CAAE,CACrBH,SAAS,CAACG,OAAO,CAACC,UAAU,CAAC,CAAC,CAC9BJ,SAAS,CAACG,OAAO,CAAG,IAAI,CAC1B,CACA,GAAID,UAAU,CAACC,OAAO,CAAE,CACtBV,SAAS,CAAC,IAAI,CAAC,CACfE,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CACF,CAAC,CAAE,CAACC,KAAK,CAAEC,IAAI,CAAEC,eAAe,CAAEC,aAAa,CAAC,CAAC,CAEjD,KAAM,CAAA6B,KAAK,CAAG,CACZpC,MAAM,CACNE,SACF,CAAC,CAED,mBACEP,IAAA,CAACC,aAAa,CAACyC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAArC,QAAA,CAClCA,QAAQ,CACa,CAAC,CAE7B,CAAC,CAED,MAAO,MAAM,CAAAuC,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGnD,UAAU,CAACQ,aAAa,CAAC,CACzC,GAAI,CAAC2C,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}